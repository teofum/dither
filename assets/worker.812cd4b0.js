(function(){"use strict";const E=[{x:1,y:0,w:.4375},{x:-1,y:1,w:.1875},{x:0,y:1,w:.3125},{x:1,y:1,w:.0625}],v=[{x:1,y:0,w:7/48},{x:2,y:0,w:5/48},{x:-2,y:1,w:3/48},{x:-1,y:1,w:5/48},{x:0,y:1,w:7/48},{x:1,y:1,w:5/48},{x:2,y:1,w:3/48},{x:-2,y:2,w:1/48},{x:-1,y:2,w:3/48},{x:0,y:2,w:5/48},{x:1,y:2,w:3/48},{x:2,y:2,w:1/48}],A=[{x:1,y:0,w:5/32},{x:2,y:0,w:3/32},{x:-2,y:1,w:2/32},{x:-1,y:1,w:4/32},{x:0,y:1,w:5/32},{x:1,y:1,w:4/32},{x:2,y:1,w:2/32},{x:-1,y:2,w:2/32},{x:0,y:2,w:3/32},{x:1,y:2,w:2/32}],C=[{x:1,y:0,w:8/42},{x:2,y:0,w:4/42},{x:-2,y:1,w:2/42},{x:-1,y:1,w:4/42},{x:0,y:1,w:8/42},{x:1,y:1,w:4/42},{x:2,y:1,w:2/42},{x:-2,y:2,w:1/42},{x:-1,y:2,w:2/42},{x:0,y:2,w:4/42},{x:1,y:2,w:2/42},{x:2,y:2,w:1/42}],N=[E,v,C,A];function M(r,o=2.2){return r.map(n=>{let t=n/255;return t=t>.04045?Math.pow((t+.055)/1.055,o):t/12.92,t*100})}function R(r,o=2.2){return r.map(n=>{let t=n/100;return t=t>.0031308?1.055*Math.pow(t,1/o)-.055:t*12.92,~~(t*255)})}var x=(r=>(r.Indexed="Indexed",r.Mono="Monochrome",r.RGB="RGB",r.Mixer="Mixer",r.Auto="Auto",r))(x||{});const D=(r,o)=>{const t=r.data.slice(0,4)[1]===1,w=(r.data.length-4)/5,e=t?[255,255,255]:[0,0,0],a=c=>r.data[4+c*5],d=c=>r.data[5+c*5],y=c=>r.data.slice(6+c*5,9+c*5),s=c=>{let i=o;for(let f=0;f<c;f++)i=~~(i/a(f));return i%a(c)};for(let c=0;c<w;c++)y(c).forEach((i,f)=>{t&&(i=255-i);const g=~~(i*d(c)),u=i-g,l=g+s(c)*~~(u/(a(c)-1));e[f]+=t?-l:l,e[f]<0&&(e[f]=0),e[f]>255&&(e[f]=255)});return e},p=r=>{switch(r.type){case x.Indexed:return r.data.length/3;case x.Mono:return r.data[0];case x.RGB:return r.data[0]*r.data[1]*r.data[2];case x.Mixer:{const o=(r.data.length-4)/5;let n=1;for(let t=0;t<o;t++)n*=r.data[4+t*5];return n}case x.Auto:return r.data[0];default:return 0}},G=(r,o)=>{if(o<0||o>=p(r))throw new Error(`Color index ${o} out of bounds`);switch(r.type){case x.Indexed:return r.data.slice(o*3,o*3+3);case x.Mono:return r.data.slice(2,5).map(n=>{const t=~~(n*r.data[1]),w=n-t;return t+o*~~(w/(r.data[0]-1))});case x.Mixer:return D(r,o);case x.RGB:{const n=o%r.data[2],t=~~(o/r.data[2])%r.data[1];return[~~(o/(r.data[2]*r.data[1])),t,n].map((e,a)=>e*~~(255/(r.data[a]-1)))}case x.Auto:default:throw new Error("Invalid or Auto palette type")}},B=r=>Array.from({length:p(r)},(o,n)=>G(r,n));function S(r,o,n){let t=[],w=Number.POSITIVE_INFINITY;for(let e=0;e<o.length;e++){const a=n(r,o[e]);a<=w&&(t=o[e],w=a)}return t}const k=(r,o)=>(r[0]-o[0])*(r[0]-o[0])+(r[1]-o[1])*(r[1]-o[1])+(r[2]-o[2])*(r[2]-o[2]);function z(r,o,n,t){const w=r.width*r.height*4,e=r.width*4,a=N[n.matrix||0];if(!o.palette.palette)throw new Error("null palette");const d=B(o.palette.palette),y=n.gamma||2.2;for(let s=0;s<w;s+=4){const c=M(Array.from(r.data.slice(s,s+3)),y);for(let i=0;i<3;i++)r.data[s+i]=c[i];s%(e*4)===0&&t&&t(s,w,r)}for(let s=0;s<d.length;s++)d[s]=M(d[s],y);for(let s=0;s<w;s+=4){const c=Array.from(r.data.slice(s,s+3)),i=S(c,d,k),f=s%e/4;for(let u=0;u<3;u++)r.data[s+u]=R(i,y)[u];const g=c.map((u,l)=>(u-i[l])*(n.error_mult||1));for(let u=0;u<a.length;u++){const l=s+a[u].x*4+a[u].y*e;if(f+a[u].x>=0&&f+a[u].x<r.width)for(let h=0;h<3;h++)r.data[l+h]+=g[h]*a[u].w}s%(4*e)===0&&t&&t(s,w,r)}return r}const L=[{id:"ProcErrorDiffusion",name:"Error Diffusion",run:z,maxAllowedPaletteSize:65536,supports:{threads:!1,gamma:!0},complexity:r=>r*2}],V=Array.from({length:100001});function _(r){for(let o=0;o<=1e5;o++)V[o]=Math.pow(o/1e5,1/r)*255}const m=self,I=(r,o,n)=>{m.postMessage({msg:0,params:{current:r,total:o,partial:n}})};m.addEventListener("message",r=>{var e;const o=r.data,n=(e=o.options.process.process)==null?void 0:e.name,t=o.options.process.settingValues,w=L.find(a=>a.name===n);if(!w){m.postMessage({msg:2,params:{error:`WorkerInit failed: process ${n} not found`}}),self.close();return}_(t.gamma||2.2),w.run(o.dataIn,o.options,t,I),m.postMessage({msg:1,params:{result:o.dataIn}}),self.close()})})();
